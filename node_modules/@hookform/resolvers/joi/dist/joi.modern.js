import{appendErrors as e}from"react-hook-form";import{toNestError as r}from"@hookform/resolvers";const t=(t,a={abortEarly:!1},o={})=>async(s,c,i)=>{const l=Object.assign({},a,{context:c});let n={};if("sync"===o.mode)n=t.validate(s,l);else try{n.value=await t.validateAsync(s,l)}catch(e){n.error=e}return{values:n.error?{}:n.value,errors:n.error?r((m=n.error,y=!i.shouldUseNativeValidation&&"all"===i.criteriaMode,m.details.length?m.details.reduce((r,t)=>{const a=t.path.join(".");if(r[a]||(r[a]={message:t.message,type:t.type}),y){const o=r[a].types,s=o&&o[t.type];r[a]=e(a,y,r,t.type,s?[].concat(s,t.message):t.message)}return r},{}):{}),i):{}};var m,y};export{t as joiResolver};
//# sourceMappingURL=joi.modern.js.map
